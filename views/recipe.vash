@html.extend('shared/layout', function(model) {
  @html.block('content', function(model) {
    @if(model.image !== undefined && model.image !== null){
      <div class="column sixteen wide recipe-image" data-original="@model.image"></div>
    }
    <div class="ui main container">
      <div class="ui grid">
        <div class="column eleven wide">
          @if(model.user.isAdmin || (model.byUser.id === model.user.id)) {
            <p>
              <a href="/recipe/@model.id/delete" class="ui button labeled icon red"><i class="icon remove"></i> Remove Recipe</a>
              <a href="/recipe/@model.id/edit" class="ui button labeled icon yellow"><i class="icon edit"></i> Edit Recipe</a>
            </p>
          }
          <h1 class="ui header">
            @model.title
            <div class="sub header">
              <time class="timeago date" datetime="@model.creationTime">@model.creationTime</time>
            </div>
          </h1>
          <div class="ui buttons mini">
            <button type="button" id="yum" class="ui green labeled icon button" data-tooltip="Yum">
            @if(model.currentLike.likes && model.currentLike.type === "yum") {
              <i class="thumbs up icon"></i> <span id="yum-count">@model.likes.yum</span>
            } else {
              <i class="thumbs outline up icon"></i> <span id="yum-count">@model.likes.yum</span>
            }
            </button>
            <button type="button" id="yuck" class="ui yellow right labeled icon button" data-tooltip="Yuck">
            @if(model.currentLike.likes && model.currentLike.type === "yuck") {
              <i class="thumbs down icon"></i> <span id="yuck-count">@model.likes.yuck</span>
            } else {
              <i class="thumbs outline down icon"></i> <span id="yuck-count">@model.likes.yuck</span>
            }
            </button>
          </div>

            @if(model.isFavorite) {
              <button type="button" id="favorite" class="ui mini button red icon" data-tooltip="Favorite">
                <i class="icon heart"></i>
              </button>
            } else {
              <button type="button" id="favorite" class="ui mini button basic red icon" data-tooltip="Favorite">
                <i class="icon heart outline red"></i>
              </button>
            }
          <div class="text">
            @html.raw(model.content)
          </div>
          <div class="ui comments">
            <h3 class="ui dividing header">Comments</h3>
            @model.comments.forEach(function(comment) {
              <div class="comment">
                <a class="avatar" href="/user/@comment.userId">
                  <img src="https://graph.facebook.com/v2.8/@comment.userId/picture" />
                </a>
                <div class="content">
                  <a class="author" href="/user/@comment.userId">
                    @comment.firstName @comment.lastName
                  </a>
                  <div class="metadata">
                    <time class="timeago date" datetime="@comment.creationTime">@comment.creationTime</time>
                  </div>
                  <div class="text">
                    @comment.content
                  </div>
                </div>
              </div>
            })
            <form class="ui reply form" method="post" action="/recipe/@model.id/comment">
              <div class="field">
                <textarea name="comment"></textarea>
              </div>
              <button type="submit" class="ui blue labeled submit icon button">
                <i class="icon edit"></i> Add Reply
              </button>
            </form>
          </div>
        </div>
        <div class="column five wide">
          <div class="ui segment">
            <h3><i class="icon user"></a> Author</h3>
            <div class="ui items">
              <div class="item">
                <div class="ui tiny image">
                  <img src="https://graph.facebook.com/v2.8/@model.byUser.id/picture?type=normal" />
                </div>
                <div class="content middle aligned">
                  <a class="header" href="/user/@model.byUser.id">@model.byUser.firstName @model.byUser.lastName</a>
                </div>
              </div>
            </div>
          </div>
          <div class="ui segment recipe-tags">
            <h3><i class="icon tags"></i> Tags</h3>
            @model.tags.forEach(function(tag) {
              <a href="/tag/@tag" class="ui label"><i class="icon tag"></i> @tag</a>
            })
          </div>
          <div class="ui segment">
            <h3><i class="icon shopping basket"></i> Ingredients</h3>
            <table class="ui selectable table">
              <tbody>
              @model.ingredients.forEach(function(ingredient) {
                <tr>
                  <td><strong>@ingredient.name</strong></td>
                  <td><em>@ingredient.amount @ingredient.unit</em></td>
                </tr>
              })
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  });

  @html.block('scripts', function(model) {
    @if(model.image !== undefined && model.image !== null){
      <script src="/public/javascripts/jquery.lazyload.js"></script>
      <script type="text/javascript">
        $(function () {
            $(".recipe-image").lazyload({
                effect: "fadeIn"
            });
        });
      </script>
    }
    <script type="text/javascript">
      $(function () {
        $("#yum").click(function() {
          var currentCount = parseInt($("#yum-count").text());
          if($("#yum i").hasClass("outline")) {
            like("yum", function() {
              $("#yum i").removeClass("outline");
              currentCount++;
              $("#yum-count").text(currentCount);
              maybeRemoveYuck();
            });
          }
          else {
            unlike(function() {
              maybeRemoveYum();
            });
          }
        });

        $("#yuck").click(function() {
          var currentCount = parseInt($("#yuck-count").text());
          if($("#yuck i").hasClass("outline")) {
            like("yuck", function() {
              $("#yuck i").removeClass("outline");
              currentCount++;
              $("#yuck-count").text(currentCount);
              maybeRemoveYum();
            });
          }
          else {
            unlike(function() {
              maybeRemoveYuck();
            });
          }
        });

        $("#favorite").click(function() {
          favoriteToggle();
        });
      });

      function maybeRemoveYuck() {
        if(!$("#yuck i").hasClass("outline")) {
          var currentCount = parseInt($("#yuck-count").text());
          $("#yuck i").addClass("outline");
          currentCount--;
          $("#yuck-count").text(currentCount);
        }
      }

      function maybeRemoveYum() {
        if(!$("#yum i").hasClass("outline")) {
          var currentCount = parseInt($("#yum-count").text());
          $("#yum i").addClass("outline");
          currentCount--;
          $("#yum-count").text(currentCount);
        }
      }

      function like(type, callback) {
        $.get("/recipe/@model.id/" + type, function(data) {
          callback();
        });
      }

      function unlike(callback) {
        $.get("/recipe/@model.id/unlike", function(data) {
          callback();
        });
      }

      function favoriteToggle() {
        var heart = $("#favorite i");
        if(heart.hasClass("outline")) {
          $.get("/recipe/@model.id/favorite", function(data) {
            heart.removeClass("outline");
            heart.removeClass("red");
            $("#favorite").removeClass("basic");
          });
        }
        else {
          $.get("/recipe/@model.id/unfavorite", function(data) {
            $("#favorite").addClass("basic");
            heart.addClass("red");
            heart.addClass("outline");
          });
        }
      }
    </script>
  });
})
